{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\n<div style=\\\"text-align:center\\\">\\n\\n  <div class=\\\"new_form\\\">\\n    <h1>New Task</h1>\\n\\n    <form (submit)=\\\"onSubmit()\\\">\\n      <!-- use the json pipe to see how newTask changes in real time -->\\n      <p> {{ newTask | json }} </p>\\n      Title: <input type=\\\"text\\\" name=\\\"newTask.title\\\" [(ngModel)]=\\\"newTask.title\\\" /><br>\\n      Description: <input type=\\\"text\\\" name=\\\"newTask.description\\\" [(ngModel)]=\\\"newTask.description\\\" /><br>\\n      <input type=\\\"submit\\\" value=\\\"Create Task\\\" />\\n      </form>\\n\\n\\n  </div>\\n\\n  <div class=\\\"row\\\" style=\\\"display: flex\\\">\\n\\n    <div class=\\\"column\\\" style=\\\"flex:50%\\\">\\n      <h1>Task List</h1>\\n        <div style=\\\"border:black 1px solid; margin: 5px; padding: 5px\\\" *ngFor=\\\"let task of tasks\\\">\\n          <h3>{{ task.title }} </h3>\\n          <p>{{ task.description }}</p>\\n          <button (click)=\\\"edit(task._id)\\\">Edit</button>\\n          <button (click)=\\\"delete(task._id)\\\">Delete</button>\\n\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"column\\\" style=\\\"flex:50%;\\\">\\n    <div *ngIf=\\\"hidden == false\\\">\\n      <h3>Edit a Task</h3>\\n\\n      <form (submit)=\\\"onEdit()\\\">\\n             \\n              Title: <input type=\\\"text\\\" name=\\\"task_editing.title\\\" [(ngModel)]=\\\"task_editing.title\\\" /><br>\\n              Description: <input type=\\\"text\\\" name=\\\"task_editing.description\\\" [(ngModel)]=\\\"task_editing.description\\\" /><br>\\n              <input type=\\\"submit\\\" value=\\\"Update Task\\\" />\\n              </form>\\n      </div>\\n\\n    </div>\\n    </div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n <!-- <h1>Restful Tasks API</h1>\\n  \\n\\n  <h2>All the Tasks:</h2>\\n\\n  <button (click)=\\\"clickAllTasks()\\\" >Get All Tasks</button>\\n\\n    <ul>\\n      <li *ngFor=\\\"let task of tasks\\\">{{task.title}} <button (click)=\\\"clickOneTask(task._id)\\\">Show</button></li>\\n        \\n    </ul>\\n\\n    <p>{{one_task.title}} - {{one_task.description}}</p>  -->\\n\\n\\n    <!-- <h2>The Third Task:</h2>\\n\\n    <ul>\\n      <li>{{tasks[2].title}} - {{tasks[2].description}}</li>\\n    </ul> -->\\n\\n\\n\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  title = 'public';\n  tasks = [];\n  newTask: any;\n  task_editing: any;\n  hidden = true;\n  // one_task;\n\n\n\n  constructor(private _httpService: HttpService){}\n  ngOnInit(){\n    this.getTasksFromService();\n    this.newTask = {title: \"\", description: \"\" }\n\n  }\n\n  getTasksFromService(){\n    let observable = this._httpService.getTasks();\n    observable.subscribe((data: any) => {\n      console.log(\"Got our tasks!\", data)\n      this.tasks = data;\n    })\n  }\n\n  onSubmit() {\n    let observable = this._httpService.createTask({title: this.newTask.title, description: this.newTask.description});\n    observable.subscribe(data => {\n      this.newTask = { title: \"\", description: \"\" };\n      this.getTasksFromService();\n    }) \n    }\n\n    edit(id:string){\n     this.hidden=false;\n\n      let observable1 = this._httpService.getOneTask(id);\n      observable1.subscribe((data: any) => {\n      console.log(\"Got our tasks!\", data)\n      this.task_editing = data;\n    })\n  }\n\n    onEdit(){\n      let observable = this._httpService.editTask(this.task_editing);\n      observable.subscribe(data => {\n        console.log('task updated');\n        this.task_editing = {title: \"\", description: \"\"};\n        this.hidden = true;\n        this.getTasksFromService();\n      })\n      \n    }\n\n    delete(id:string){\n      let observable = this._httpService.destroyTask(id);\n      observable.subscribe(data =>{\n        console.log(\"Task deleted\");\n        this.getTasksFromService();\n      })\n\n    }\n\n\n  // clickAllTasks(){\n  //   let observable = this._httpService.getTasks();\n  //   observable.subscribe((data: any) => {\n  //     console.log(\"Got our tasks!\", data)\n  //     this.tasks = data;\n  // }\n\n  //   )}\n\n  // clickOneTask(id:string){\n  //   let observable = this._httpService.getOneTask(id);\n  //   observable.subscribe((data: any) => {\n  //     console.log(\"Got our tasks!\", data)\n  //     this.one_task = data;\n  //   }\n\n  //   )}\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms'; \n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http: HttpClient) {\n    this.getTasks();\n   }\n   getTasks(){\n    return this._http.get('/tasks');\n    }\n\n    getOneTask(id:string){\n      return this._http.get(`/tasks/${id}`)\n    }\n\n    createTask({title, description}){\n      return this._http.post('/tasks', {title, description});\n    }\n\n    editTask(updated_task){\n      return this._http.put(`/tasks/${updated_task._id}`, updated_task);\n    }\n\n    destroyTask(id:string){\n      return this._http.delete(`/tasks/${id}`);\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}